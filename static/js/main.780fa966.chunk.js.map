{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","cardID","initialState","id","concat","cards","listsReducer","state","arguments","length","undefined","action","newList","Object","toConsumableArray","newCard","console","log","map","list","objectSpread","_action$payload","newState","splice","apply","_list$cards","find","card","_listEnd$cards","_action$payload2","newText","newCards","_action$payload3","filter","_action$payload4","newListTitle","combineReducers","lists","store","createStore","rootReducer","Container","styled","div","_templateObject","taggedTemplateLiteral","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","dispatch","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","props","useSpring","opacity","from","config","duration","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","web","style","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","select","handleFinishEditing","newTitle","editTitle","handleDeleteList","deleteList","droppableId","droppableProps","onSubmit","onFocus","TrelloList_DeleteButton","components_TrelloCard","key","components_TrelloCreate","ListsContainer","App_templateObject","App","onDragEnd","result","destination","source","direction","components_TrelloList","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.780fa966.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nexport const addList = title => {\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: title\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAG_HAPPENED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexEnd,\n      droppableIndexStart,\n      draggableId,\n      type\n    }\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return {\n    type: CONSTANTS.DELETE_LIST,\n    payload: {\n      listID\n    }\n  };\n};\n","import { CONSTANTS } from \"../actions\";\n\nexport const addCard = (listID, text) => {\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nlet listID = 2;\nlet cardID = 6;\n\nconst initialState = [\n  {\n    title: \"1번 데이터 베이스\",\n    id: `list-${0}`,\n    cards: [\n      {\n        id: `card-${0}`,\n        text: \"1번 데이터\"\n      },\n      {\n        id: `card-${1}`,\n        text: \"2번 데이터\"\n      }\n    ]\n  },\n  {\n    title: \"2번 데이터 베이스\",\n    id: `list-${1}`,\n    cards: [\n      {\n        id: `card-${2}`,\n        text: \"1번데이터\"\n      },\n      {\n        id: `card-${3}`,\n        text: \"2번데이터\"\n      },\n      {\n        id: `card-${4}`,\n        text: \"3번데이터\"\n      }\n    ]\n  }\n];\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      const newList = {\n        title: action.payload,\n        cards: [],\n        id: `list-${listID}`\n      };\n      listID += 1;\n      return [...state, newList];\n\n    case CONSTANTS.ADD_CARD: {\n      const newCard = {\n        text: action.payload.text,\n        id: `card-${cardID}`\n      };\n      cardID += 1;\n\n      console.log(\"action received\", action);\n\n      const newState = state.map(list => {\n        if (list.id === action.payload.listID) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type\n      } = action.payload;\n      const newState = [...state];\n\n      // draggin lists around\n      if (type === \"list\") {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state.find(list => droppableIdStart === list.id);\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state.find(list => droppableIdEnd === list.id);\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      return newState;\n\n    case CONSTANTS.EDIT_CARD: {\n      const { id, listID, newText } = action.payload;\n      return state.map(list => {\n        if (list.id === listID) {\n          const newCards = list.cards.map(card => {\n            if (card.id === id) {\n              card.text = newText;\n              return card;\n            }\n            return card;\n          });\n          return { ...list, cards: newCards };\n        }\n        return list;\n      });\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id, listID } = action.payload;\n      return state.map(list => {\n        if (list.id === listID) {\n          const newCards = list.cards.filter(card => card.id !== id);\n          return { ...list, cards: newCards };\n        } else {\n          return list;\n        }\n      });\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newListTitle } = action.payload;\n      return state.map(list => {\n        if (list.id === listID) {\n          list.title = newListTitle;\n          return list;\n        } else {\n          return list;\n        }\n      });\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      return state.filter(list => list.id !== listID);\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\n\nexport default combineReducers({\n  lists: listsReducer\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"데이터 베이스 이름을 적으세요\"\n      : \"데이터 값을 집어 넣으세요\";\n\n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const props = useSpring({\n    opacity: 1,\n    from: { opacity: 0 },\n    config: { duration: 400 }\n  });\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>저장하기</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <animated.div style={props}>\n        <Draggable draggableId={String(id)} index={index}>\n          {provided => (\n            <CardContainer\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n              onDoubleClick={() => setIsEditing(true)}\n            >\n              <Card>\n                <EditButton\n                  onMouseDown={() => setIsEditing(true)}\n                  fontSize=\"small\"\n                >\n                  edit\n                </EditButton>\n                <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                  delete\n                </DeleteButton>\n\n                <CardContent>\n                  <Typography>{text}</Typography>\n                </CardContent>\n              </Card>\n            </CardContainer>\n          )}\n        </Draggable>\n      </animated.div>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"박스 추가\" : \"데이터 추가\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.27)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"박스 추가\" : \"데이터 추가\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"박스 추가\" : \"데이터 추가\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState, useEffect } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #ccc;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #eee;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    console.log(\"hi\");\n\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {isEditing ? (\n                  renderEditInput()\n                ) : (\n                  <TitleContainer onClick={() => setIsEditing(true)}>\n                    <ListTitle>{listTitle}</ListTitle>\n                    <DeleteButton onClick={handleDeleteList}>\n                      delete\n                    </DeleteButton>\n                  </TitleContainer>\n                )}\n\n                {cards.map((card, index) => (\n                  <TrelloCard\n                    key={card.id}\n                    text={card.text}\n                    id={card.id}\n                    index={index}\n                    listID={listID}\n                  />\n                ))}\n\n                {provided.placeholder}\n                <TrelloCreate listID={listID} />\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { Component, PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort } from \"../actions\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// TODO: Fix performance issue\n\nclass App extends PureComponent {\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <h2>1번</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {lists.map((list, index) => (\n                <TrelloList\n                  listID={list.id}\n                  key={list.id}\n                  title={list.title}\n                  cards={list.cards}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport $ from \"jquery\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: #FFFAEB;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function(e) {\n  console.log(\"Removed: \" + e.target.nodeName);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}